/* Designing all grid */
.grid-container {
    /* Display properties */
    display: grid;
    background-color: green;
    padding: 25px; 
      /* Columns and rows*/
   /* grid-template-columns: auto auto auto auto auto; */
    /* grid-template-columns: 5rem 10rem 3rem; */
    /* grid-template-columns: 2fr 4fr 2fr; */
    /* grid-template-columns:repeat(3,1fr); */
    grid-template-columns: 25% 50% 25%;
    /* grid-template-columns: subgrid; */

    /* grid-template-rows: 3rem 20% auto; */
     /* Gaps */
  /* grid-row-gap: 1rem;
  grid-column-gap: 0.5rem; */
    /* grid-column-gap: 0.5rem; */
    grid-gap: 1rem 0.5rem;
    
    
   
}

/* Designing all grid-items */
.grid-item {
    background-color:gainsboro;
    border: 1px solid black;
    padding: 20px;
    font-size: 30px;
    text-align: center;
     /* Place item shorthand */
     place-items: start stretch;
     
}

/* Designing h1 element */
h1 {
    color: green;
    text-align: center;
}


.practice{
 /* Content justification (horizontal or column alignment) */
 justify-content: start; /* Align content to the left */
 justify-content: center; /* Align content centered horizontally within the grid */
 justify-content: end; /* Align content to the right */
 justify-content: stretch; /* (default) Fills available area (horizontally) */

 justify-content: space-around; /* Chooses a space for both sides of the columns like a left and right margin */
 justify-content: space-between; /* Chooses a space to go between columns, no margins on outside of content */
 justify-content: space-evenly; /* Chooses a space that goes between all columns and edges consistently */
 /* Content alignment (horizontal or column alignment) */
 align-content: start; /* Align content to the top */
 align-content: center; /* Align content centered vertically within the grid */
 align-content: end; /* Align content to the bottom */
 align-content: stretch; /* (default) Fills available area (vertically) */

 align-content: space-around; /* Chooses a space for the top and bottom of the rows like a top and bottom margin */
 align-content: space-between; /* Chooses a space to go between rows, no margins on outside of content */
 align-content: space-evenly; /* Chooses a space that goes between all rows and edges consistently */
 /* Place item shorthand */
 place-content: center start;

 /* The above is the same as below long-hand */
 align-content: center;
 justify-content: start;
 /* Automatic grid positioning */

 grid-auto-flow: row; /* Left-to-right rows, then top-to-bottom*/
 grid-auto-flow: column; /* Top-to-bottom columns, then left-to-right */
 grid-auto-flow: dense; /* Responds with best-guess on left-to-right, top-to-bottom order with advanced layouts */
 /* There is one final shorthand for all container properties in one */

 /* Explicit grid columns, rows, and areas */
 grid:
   "header header" auto
   "main aside" 100vh
   "footer footer" 10rem
   / 80% 20%; /* You can include a template as the only value, which is equivalent to below */
 grid-template:
   "header header" auto
   "main aside" 100vh
   "footer footer" 10rem
   / 80% 20%; /* Which is again equivalent to below */
 grid-template-columns: 80% 20%;
 grid-template-rows: auto 100vh 10rem;
 grid-template-areas:
   "header header"
   "main aside"
   "footer footer";

 /* Automatic grid flows */
 grid: 1rem / auto-flow dense 1fr; /* You can include rows, a flow, and automatic columns, which is equivalent to below */
 grid-template-rows: 1rem;
 grid-auto-flow: dense;
 grid-auto-columns: 1fr;

 grid: auto-flow dense 1rem / repeat(10, 10%); /* Conversely, you can do the same thing with automatic rows, and defined columns */
 grid-auto-flow: dense;
 grid-auto-rows: 1rem;
 grid-template-columns: repeat(10, 10%);
}